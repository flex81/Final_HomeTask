
// так "<--" отмечены места где нужно (возможно нужно) указать/редактировать данные

Функция ПолучитьПараметры()
    Параметры = Новый Структура;

    ПутьКРепозиторию = ТекущийКаталог();

    Параметры.Вставить("ПутьКРепозиторию", ПутьКРепозиторию);

    Precommit = Новый Структура;

    Precommit.Вставить("Путь", "D:\repo\precommit1c\"); // <--
    
    КопируемыеФайлы = Новый Массив;

    КопируемыеФайлы.Добавить("pre-commit");
    КопируемыеФайлы.Добавить("v8files-extractor.os");
    // <--

    КопируемыеКаталоги = Новый Массив;

    КопируемыеКаталоги.Добавить("ibService");
    КопируемыеКаталоги.Добавить("tools");
    КопируемыеКаталоги.Добавить("v8Reader");
    // <--
    
    Precommit.Вставить("Файлы", КопируемыеФайлы);
    Precommit.Вставить("Каталоги", КопируемыеКаталоги);
    
    Параметры.Вставить("Precommit", Precommit);

    Пользователь = Новый Структура;

    Пользователь.Вставить("Имя", "proba"); // <--
    Пользователь.Вставить("Email", "proba@proba.com"); // <--

    Параметры.Вставить("Пользователь", Пользователь);

    // Имена файлов портированы из https://github.com/silverbulleters/vanessa-bootstrap 
    ТиповыеФайлы = Новый Массив;

    ТиповыеФайлы.Добавить("README.md");
    // <--
    
    Параметры.Вставить("ТиповыеФайлы", ТиповыеФайлы);

    // Имена каталогов портированы из https://github.com/silverbulleters/vanessa-bootstrap 
    ТиповыеКаталоги = Новый Массив;

    ТиповыеКаталоги.Добавить("doc");
    ТиповыеКаталоги.Добавить("examples");
    ТиповыеКаталоги.Добавить("features");
    ТиповыеКаталоги.Добавить("lib");
    ТиповыеКаталоги.Добавить("license");
    ТиповыеКаталоги.Добавить("spec");
    ТиповыеКаталоги.Добавить("src");
    ТиповыеКаталоги.Добавить("tools");
    ТиповыеКаталоги.Добавить("vendor");
    // <--
    
    Параметры.Вставить("ТиповыеКаталоги", ТиповыеКаталоги);
    
    Возврат Параметры;
КонецФункции

Процедура ИнициализироватьИНастроитьРепозиторий(Параметры)
    ЗапуститьПриложение("git init", Параметры.ПутьКРепозиторию, Истина);

    ЗапуститьПриложение("git config --local user.name " + Параметры.Пользователь.Имя, Параметры.ПутьКРепозиторию, Истина);
    ЗапуститьПриложение("git config --local user.email " + Параметры.Пользователь.Email, Параметры.ПутьКРепозиторию, Истина);

    ЗапуститьПриложение("git config --local core.quotepath false", Параметры.ПутьКРепозиторию, Истина);
КонецПроцедуры

Процедура КопироватьPrecommit(Параметры)
    Для каждого Элемент Из Параметры.Precommit.Файлы Цикл
        Источник = Параметры.Precommit.Путь + "\" + Элемент;
        Приемник = Параметры.ПутьКРепозиторию + "\.git\hooks\" + Элемент;
        
        КопироватьФайл(Источник, Приемник);

        Сообщить("Скопирован файл " + Элемент);
    КонецЦикла;

    Для каждого Элемент Из Параметры.Precommit.Каталоги Цикл
        Источник = Параметры.Precommit.Путь + "\" + Элемент;
        Приемник = Параметры.ПутьКРепозиторию + "\.git\hooks\" + Элемент;
        
        КопироватьСодержимоеКаталога(Источник, Приемник);

        Сообщить("Скопирован каталог " + Элемент);
    КонецЦикла;
КонецПроцедуры

Процедура СоздатьТиповыеФайлыИКаталоги(Параметры)
    Для Каждого Элемент Из Параметры.ТиповыеФайлы Цикл
        ИмяФайла = Параметры.ПутьКРепозиторию + "\" + Элемент;

        Файл = Новый ЗаписьТекста(ИмяФайла, КодировкаТекста.UTF8NoBOM);

        Файл.Закрыть();

        Сообщить("Создан файл " + Элемент);
    КонецЦикла;

    Для Каждого Элемент Из Параметры.ТиповыеКаталоги Цикл
        ИмяКаталога = Параметры.ПутьКРепозиторию + "\" + Элемент;

        СоздатьКаталог(ИмяКаталога);

        Сообщить("Создан каталог " + Элемент)
    КонецЦикла;
КонецПроцедуры

// Процедура портирована из https://github.com/xDrivenDevelopment/1c-syntax/blob/master/build.os
Процедура КопироватьСодержимоеКаталога(Откуда, Куда)
	
	КаталогНазначения = Новый Файл(Куда);
	Если КаталогНазначения.Существует() Тогда
		Если КаталогНазначения.ЭтоФайл() Тогда
			УдалитьФайлы(КаталогНазначения.ПолноеИмя);
			СоздатьКаталог(Куда);
		КонецЕсли;
	Иначе
		СоздатьКаталог(Куда);
	КонецЕсли;

	Файлы = НайтиФайлы(Откуда, ПолучитьМаскуВсеФайлы());
	Для Каждого Файл Из Файлы Цикл
		ПутьКопирования = ОбъединитьПути(Куда, Файл.Имя);
		Если Файл.ЭтоКаталог() Тогда
			КопироватьСодержимоеКаталога(Файл.ПолноеИмя, ПутьКопирования);
		Иначе
			КопироватьФайл(Файл.ПолноеИмя, ПутьКопирования);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Параметры = ПолучитьПараметры();

ИнициализироватьИНастроитьРепозиторий(Параметры);
КопироватьPrecommit(Параметры);
СоздатьТиповыеФайлыИКаталоги(Параметры);
